{"_id":"react-use-navigate","_rev":"2-76fb52ca9d30080985743e6ffaa2de1e","name":"react-use-navigate","dist-tags":{"latest":"0.1.1"},"versions":{"0.1.0":{"name":"react-use-navigate","description":"Easy and expressive conditional navigation in React","version":"0.1.0","license":"MIT","pika":true,"sideEffects":false,"homepage":"https://github.com/kag359six/react-use-navigate#readme","bugs":{"url":"https://github.com/kag359six/react-use-navigate/issues"},"repository":{"type":"git","url":"git+https://github.com/kag359six/react-use-navigate.git"},"dependencies":{"minimatch":"^3.0.4"},"peerDependencies":{"react":"^16.8.0","react-dom":"^16.8.0"},"devDependencies":{"@babel/core":"^7.12.10","@babel/preset-env":"^7.12.11","@babel/preset-react":"^7.12.10","@babel/preset-typescript":"^7.12.7","@pika/pack":"^0.5.0","@pika/plugin-build-types":"^0.9.2","@pika/plugin-build-web":"^0.9.2","@pika/plugin-standard-pkg":"^0.9.2","@testing-library/react":"^11.0.0","@testing-library/react-hooks":"^5.0.3","@types/jest":"^26.0.20","@types/react":"^16.8.0","@types/react-dom":"^16.8.0","@typescript-eslint/eslint-plugin":"^4.14.0","@typescript-eslint/parser":"^4.14.0","babel-jest":"^26.6.3","eslint":"^7.18.0","eslint-config-prettier":"^7.2.0","eslint-plugin-prettier":"^3.3.1","jest":"^26.6.3","pika-plugin-minify":"^0.1.0","prettier":"^2.0.5","react":"^17.0.1","react-dom":"^17.0.1","typescript":"^4.0.0"},"esnext":"dist-src/index.js","types":"dist-types/index.d.ts","module":"dist-web/index.js","_id":"react-use-navigate@0.1.0","_nodeVersion":"12.18.3","_npmVersion":"6.14.6","dist":{"integrity":"sha512-IK+fA7dzobw13aJRVfgQVnlK3zL0chXy/c/KvcIJl97DPLb8lV465XszqbSv75eZuiHrJzbTM2AvxQMIPrC2Xg==","shasum":"d407605cfd06f5c76ab4774913489eb7c30f4d9e","tarball":"https://registry.npmjs.org/react-use-navigate/-/react-use-navigate-0.1.0.tgz","fileCount":11,"unpackedSize":42920,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgE2NNCRA9TVsSAnZWagAArMUP/inTQp8DECICvHt9Rpb2\nPlhwM2f1tdCCCN+eQKBmxMvIjmmts/gqLtdc4XLxlyoj6EvNJAy9OOOyhINb\n6vOy1hsSN50UCpCSEuKJ4m+1cKSV5LVZoNBPLj2MLZuAEo4O1SS3jr50fI+B\noAv4wbvv+NnuLaaCCR+GB9UCSYqZAEPz4+49tQh44bYJDL9A5lRTXJBtNX8Z\n3zTuEAgbtRMmCzBCm+foLJbSHoaL8IX5baJRTj1gElvCuwQHi8A6V+SQqhKm\nbx4kOaiGwiL8vaCVlqIJAS6GJgJefrVxmLKiy+K6APP7uIVlIz2cJcC3HkZW\n+x8Z5ErUhhdGoBtO8dZ8TnEC6xKNKLsuqnR6WK7pW1v3e5x8a8Sv1SJxAiDD\naVKR/Z/yO6UGh6VH4uKwriLpJ2Du+kB700rqObdpE8OY2pciZsv4Wlt2sHWI\n96GC2MNEabqJ4pWf68+QjTZkwQNm6sNchImnCQGkGP6YH+gbhyAPDdY9Zptk\nuCTRNYfmRiYWRPkvP/mQXnpFwBvTVfoNcGptbPcAzEZEyaQIy7sdOSpkskkE\nJklaewQ8v4NfoIWd5uMaNjpAFvHzIBAHxPC8kyreOlc92/w3gAjNjy/SSQTi\nd3nbb9Pkb2OCR6CJzF+s/1pAVEGAnNYv0/2nfLKPmIo2IiDKyzZc4wO4yAPJ\nwS94\r\n=GPLs\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCpf/n5oqZkgPxTMBVoM9zkYTdSLuvtZpr0WK6VBqqMIgIgbSzkwEvvhIb+YnSyUAkgVynEeXcfvWutaMVXPNhRnIY="}]},"_npmUser":{"name":"kag359six","email":"kg@kristopherguzman.com"},"directories":{},"maintainers":[{"name":"kag359six","email":"kg@kristopherguzman.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-use-navigate_0.1.0_1611883340439_0.8385323253826791"},"_hasShrinkwrap":false},"0.1.1":{"name":"react-use-navigate","description":"Easy and expressive conditional navigation in React","version":"0.1.1","license":"MIT","pika":true,"sideEffects":false,"homepage":"https://github.com/kag359six/react-use-navigate#readme","bugs":{"url":"https://github.com/kag359six/react-use-navigate/issues"},"repository":{"type":"git","url":"git+https://github.com/kag359six/react-use-navigate.git"},"dependencies":{"minimatch":"^3.0.4"},"peerDependencies":{"react":"^16.8.0","react-dom":"^16.8.0"},"keywords":["react","typescript","react-hooks"],"devDependencies":{"@babel/core":"^7.12.10","@babel/preset-env":"^7.12.11","@babel/preset-react":"^7.12.10","@babel/preset-typescript":"^7.12.7","@pika/pack":"^0.5.0","@pika/plugin-build-types":"^0.9.2","@pika/plugin-build-web":"^0.9.2","@pika/plugin-standard-pkg":"^0.9.2","@testing-library/react":"^11.0.0","@testing-library/react-hooks":"^5.0.3","@types/jest":"^26.0.20","@types/react":"^16.8.0","@types/react-dom":"^16.8.0","@typescript-eslint/eslint-plugin":"^4.14.0","@typescript-eslint/parser":"^4.14.0","babel-jest":"^26.6.3","eslint":"^7.18.0","eslint-config-prettier":"^7.2.0","eslint-plugin-prettier":"^3.3.1","jest":"^26.6.3","pika-plugin-minify":"^0.1.0","prettier":"^2.0.5","react":"^17.0.1","react-dom":"^17.0.1","typescript":"^4.0.0"},"esnext":"dist-src/index.js","types":"dist-types/index.d.ts","module":"dist-web/index.js","_id":"react-use-navigate@0.1.1","_nodeVersion":"12.18.3","_npmVersion":"6.14.6","dist":{"integrity":"sha512-FjSKKHmTy0DA0KBGsNlN97HVha3L3WCTRfXG2lucrgWjQGzqZZTKQ2FdCOZgE+rkBdBTAM6PLEV9MfUdm6MHlQ==","shasum":"5657642832c33afbefb595532252d6ed81af1c67","tarball":"https://registry.npmjs.org/react-use-navigate/-/react-use-navigate-0.1.1.tgz","fileCount":11,"unpackedSize":42990,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgE2S0CRA9TVsSAnZWagAAPAEP/i7/NyF6SOl7jIsg1Xvl\n/MIj1prvEIVBAtbGTJozu7KZsHPJuWIDkAHm8vVXkGjEIxiEHNq9BgNaoBrG\nPZ4TNPTBuDPUEjJpQXXWE80fNeCfBf1ILf4G9tVQAQFRVCUoNgryqQu2wNav\nz9CzK2lYqRHNv2fdU1mun/Ht6zyIdA2F9dLH5JXekGB+VVvdIb5HKj9umMnD\n1mlURPQj7sXa5xFhGgQ8wBVIYtO9LLvOViQr20ALSrcTHfiL52XAg+nC1iVE\ngx09H6YbVzd7pzYfXqGSWtnUOYqsjj3F2GpdaF4NMnVQBaNlNAS1YeFhrorq\nXffCPI6oiGp4CS61knsuDPSjF6iVHR7JXauev8l3VaUgER0YiX8JKLCeT78y\nUqbSm4RBRh0xmNAeHyVjDDaQNbPQHQBsrYnrl4pvHcBA27hXIGStY7Y8kpwl\n5t3dPCpKG1JrFbHAYjj5m1we4OTp+H6ceyMaTL2eG32BSQiWdRi3KplXf7cY\neoJCzyuEL8JVB2qQmFAh8WieKjybB1hpsJotavOBSulVV4OnZV96VePPuaDS\no+1JpBVBUo0xXyZLanQ181aFP3k4s8JCNMNw5kwb4tH4OJnsamtzowYvTAtP\nK3dmEtatu4jBh2ufnGC5QkHtENb4qxGqzvUIh2E16ZB2o9g1/MXOdPdOl0fS\nQiVV\r\n=1jC1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCwki5tbOpiGchjohN+A7n+cBMisSvDAi9q3cJUf3D+WQIgOgARo9TzBgwFPHTHPLvSs04kxt0++8EVw5zge+JaiqE="}]},"_npmUser":{"name":"kag359six","email":"kg@kristopherguzman.com"},"directories":{},"maintainers":[{"name":"kag359six","email":"kg@kristopherguzman.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-use-navigate_0.1.1_1611883700465_0.449590780075521"},"_hasShrinkwrap":false}},"time":{"created":"2021-01-29T01:22:20.439Z","0.1.0":"2021-01-29T01:22:20.582Z","modified":"2022-05-15T07:07:32.902Z","0.1.1":"2021-01-29T01:28:20.622Z"},"maintainers":[{"name":"kag359six","email":"kg@kristopherguzman.com"}],"description":"Easy and expressive conditional navigation in React","homepage":"https://github.com/kag359six/react-use-navigate#readme","repository":{"type":"git","url":"git+https://github.com/kag359six/react-use-navigate.git"},"bugs":{"url":"https://github.com/kag359six/react-use-navigate/issues"},"license":"MIT","readme":"# react-use-navigate\n\nEasy, flexible, and expressive hook based navigation in React.\n\n## Features\n- Tiny. Simple. Expressive. 1.5kb gzipped.\n- TypeScript ready\n- React framework agnostic (Next.js, Gatsby, React Router, Reach Router, etc.)\n- Glob pattern matching support\n\n## Motivation\nOften times we want to navigate pages conditionally. This can easily turn into a bunch of if else statements and regex matching. Here's some code that redirects a logged out user to `/login` if they on a page under the `/app` directory. If they are logged in but not in the app, they are redirected to the app dashboard.\n\n```\nuseEffect(() => {\n  const inApp = new RegEx(`/${location.hostname}\\/app\\/([0-9A-Za-z]+\\/?)+/`)\n  if(!isLoggedIn && inApp) {\n    return goTo('/login')\n  }\n  if(isLoggedIn && !inApp) {\n    return goTo('/app/dashboard')\n  }\n}, [isLoggedIn])\n```\n\nNot complicated to follow (aside from the regex), but for something so easy to express in words, it sure doesn't look it. Using the `useNavigate()` hook, here's what the same code would look like:\n\n```\nconst { replace } = useNavigate()\n\nuseEffect(() => {\n  replace({\n    goTo: '/login',\n    when: !isLoggedIn,\n    onPaths: ['/app/**'], // glob pattern matching goodness\n    otherwiseGoTo: '/app/dashboard', // this will only trigger if when === false AND path requirements fail\n  })\n}, [isLoggedIn])\n```\nThis can almost be read as sentence, roughly translating to, \"go to `/login` when user is not logged in while on any app directory. Otherwise, go to the app dashboard.\"\n\nBut what if we want to navigate a user when they *aren't* on a page in a particular directory? For example, maybe we have multiple apps like `/analytics` and `/editor`. Perhaps we want to just be general and say \"send the user to login if they aren't on a marketing page\". No problem, here's the same code as above with a slight modification:\n\n```\nconst { replace } = useNavigate()\n\nuseEffect(() => {\n  replace({\n    goTo: '/login',\n    when: !isLoggedIn,\n    notOnPaths: ['/marketing/**'], // navigates when a user isn't on a matching page\n  })\n}, [isLoggedIn])\n```\n\n## Installation\n```\nyarn add react-use-navigate\nnpm install react-use-navigate\n```\nThis package has a peer dependency on React and React DOM > 16.8.0 (basically you need react hooks).\n\n## Setup\nThis hook doesn't care *how* navigation works, it just asks that you provide the logic for the basic navigation methods `push`, `replace`, and `back`.\n\nThis can be done with a config object in the `NavigateProvider`. Below are a few examples in different frameworks.\n\n### Using React Router \n\n```\nimport { NavigateProvider } from 'react-use-navigate'\n\nconst App = () => {\n  const history = useHistory()\n  \n  const config = {\n    push: history.push,\n    back: history.back,\n    replace: history.replace\n  }\n\n  return (\n    <NavigateProvider {...config}>\n      <RootComponent/>\n    </NavigateProvider>\n  )\n}\n```\n\n### Using Next.js\n\n```\nimport { NavigateProvider } from 'react-use-navigate'\n\nfunction MyApp({ Component, pageProps }) {\n  const router = useRouter()\n\n  const config = {\n    push: router.push,\n    back: router.back,\n    replace: router.replace\n  }\n\n  return (\n    <NavigateProvider {...config}>\n      <Component {...pageProps} />\n    </NavigateProvider>\n  )\n}\n```\n\n## API Reference\n\n### useNavigate()\n`const { push, back, replace } = useNavigate()`\n\nEach navigation method uses the same paramters:\n\n```\ntype UseNavigateProps = {\n  when?: boolean\n  goTo?: string\n  onPaths?: string[] // array of globs\n  notOnPaths?: string[]\n  otherwiseGoTo?: string\n}\n```\n| Property      | Description                                                                                                                                                         | type     | required |   |\n|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------|---|\n| when          | base condition that must be met to navigate                                                                                                                         | boolean  | false    |   |\n| goTo          | the link to go to                                                                                                                                                   | string   | true     |   |\n| onPaths       | navigation will occur only if a user is on one of the specified paths. Will take precedence over `notOnPaths` field                                                 | string[] | false    |   |\n| notOnPaths    | navigation will occur only if a user is not on any of the specified paths.                                                                                          | string[] | false    |   |\n| otherwiseGoTo | The link to go to if `when === false` and `onPaths` or `notOnPaths` is also false. If the latter two fields aren't specified, it will navigate if `when === false`. | string   | false    |   |\n```\n\n","readmeFilename":"README.md","keywords":["react","typescript","react-hooks"]}